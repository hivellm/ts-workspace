name: CI

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  lint:
    name: Lint
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup PNPM
        uses: pnpm/action-setup@v4
        with:
          version: 10.15.1

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 18
          cache: pnpm

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Run ESLint
        run: pnpm lint
        continue-on-error: true # Allow warnings

      - name: Check TypeScript
        run: pnpm type-check

  build:
    name: Build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup PNPM
        uses: pnpm/action-setup@v4
        with:
          version: 10.15.1

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 18
          cache: pnpm

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Build all packages
        run: pnpm build

      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: build-artifacts
          path: |
            packages/*/dist
            !packages/*/node_modules
          retention-days: 7

  test:
    name: Test
    runs-on: ubuntu-latest
    needs: [build]
    strategy:
      matrix:
        package: [bip-system, resilience-framework]
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup PNPM
        uses: pnpm/action-setup@v4
        with:
          version: 10.15.1

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 18
          cache: pnpm

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Download build artifacts
        uses: actions/download-artifact@v4
        with:
          name: build-artifacts
          path: .

      - name: Run tests for ${{ matrix.package }}
        run: pnpm --filter=${{ matrix.package }} test

      - name: Upload test results
        uses: actions/upload-artifact@v4
        if: failure()
        with:
          name: test-results-${{ matrix.package }}
          path: packages/${{ matrix.package }}/test-results.*
          retention-days: 7

  test-coverage:
    name: Test Coverage
    runs-on: ubuntu-latest
    needs: [build]
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup PNPM
        uses: pnpm/action-setup@v4
        with:
          version: 10.15.1

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 18
          cache: pnpm

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Download build artifacts
        uses: actions/download-artifact@v4
        with:
          name: build-artifacts
          path: .

      - name: Run tests with coverage
        run: pnpm test:coverage

      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v3
        with:
          file: ./coverage/lcov.info
          flags: unittests
          name: codecov-umbrella

  security:
    name: Security Audit
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup PNPM
        uses: pnpm/action-setup@v4
        with:
          version: 10.15.1

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 18
          cache: pnpm

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Run security audit
        run: pnpm audit --audit-level moderate

      - name: Check for known vulnerabilities
        run: |
          # Check for high/critical vulnerabilities
          pnpm audit --audit-level high --json > audit-results.json || true

          # Parse results and fail if critical vulnerabilities found
          node -e "
            const fs = require('fs');
            try {
              const audit = JSON.parse(fs.readFileSync('audit-results.json', 'utf8'));
              if (audit.metadata?.vulnerabilities?.high > 0 || audit.metadata?.vulnerabilities?.critical > 0) {
                console.error('Critical or high vulnerabilities found!');
                process.exit(1);
              }
              console.log('No critical vulnerabilities found.');
            } catch (e) {
              console.log('Security audit completed successfully.');
            }
          "

  validate:
    name: Validate
    runs-on: ubuntu-latest
    needs: [lint, build, test]
    if: always()
    steps:
      - name: Check job results
        run: |
          if [[ "${{ needs.lint.result }}" == "failure" ||
                "${{ needs.build.result }}" == "failure" ||
                "${{ needs.test.result }}" == "failure" ]]; then
            echo "❌ CI validation failed"
            exit 1
          else
            echo "✅ All CI jobs passed successfully"
          fi

      - name: Post status to PR
        if: github.event_name == 'pull_request'
        run: |
          echo "### 🚀 HiveLLM TypeScript Workspace CI Results" >> $GITHUB_STEP_SUMMARY
          echo "- **Build**: ${{ needs.build.result }}" >> $GITHUB_STEP_SUMMARY
          echo "- **Lint**: ${{ needs.lint.result }}" >> $GITHUB_STEP_SUMMARY
          echo "- **Tests**: ${{ needs.test.result }}" >> $GITHUB_STEP_SUMMARY
          echo "- **Packages**: BIP-01 (bip-system), BIP-02 (crypto-utils), BIP-03 (resilience-framework)" >> $GITHUB_STEP_SUMMARY
